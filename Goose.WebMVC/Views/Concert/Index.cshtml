@model IEnumerable<Goose.Models.Concert_Models.ConcertListItem>

@{
    ViewBag.Title = "Concerts - ";
}

<h2>All Performances</h2>

@if (User.IsInRole("admin"))
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}
@if (TempData.ContainsKey("Added"))
{

    <div class="alert alert-success fade in" role="alert">
        @ViewBag.SaveResult
        <button type="button" class="close" data-dismiss="alert">
            <span>&times;</span>
        </button>
        @TempData["Added"]
    </div>
}

@if (TempData.ContainsKey("AlreadySeen"))
{
    <div class="alert alert-danger fade in" role="alert">
        @ViewBag.SaveResult
        <button type="button" class="close" data-dismiss="alert">
            <span>&times;</span>
        </button>
        @TempData["AlreadySeen"]
    </div>
}

<table class="table">
    <tr>
        @if (User.IsInRole("admin"))
        {
            <th>
                @Html.DisplayNameFor(model => model.ConcertId)
            </th>
        }
    <th>
        @Html.ActionLink("Performance Date", "Index", new { sortOrder = ViewBag.DateSortParm }, new { @id = "songsort" })
    </th>
        <th>
            @Html.DisplayNameFor(model => model.Location)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VenueName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BandName)
        </th>        
        <th>
            @Html.DisplayNameFor(model => model.Setlists)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            @if (User.IsInRole("admin"))
            {
                <td>
                    @Html.DisplayFor(modelItem => item.ConcertId)
                </td>
            }
            <td>
                <a href="~/Concert/Details/@item.ConcertId">@Html.DisplayFor(modelItem => item.DateOfPerformance)</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VenueName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BandName)
            </td>            
            <td>
                @foreach (var setlistDataForConcertDetail in item.Setlists)
                {
                    <table class="table">
                        <tr>
                            <td>
                                <div>
                                                                       
                                 @Html.DisplayFor(modelItem => setlistDataForConcertDetail.SetNumber):
                                    
                                @foreach (var song in setlistDataForConcertDetail.SongsForSetlist)
                                {

                                    @Html.ActionLink(song.Title, "Details", "Song", new { id = song.SongId }, new { @class = "songswithoutcommas" })
                                       
                                }
                                </div>
                            </td>
                        </tr>
                    </table>
                }
            </td>

            <td>
                @if (User.IsInRole("admin"))
                {
                    <p>
                        @Html.ActionLink("Edit", "Edit", new { id = item.ConcertId }, new { @class = "btn btn-default center-block" }) 
                        @Html.ActionLink("Delete", "Delete", new { id = item.ConcertId }, new { @class = "btn btn-default center-block" })
                    </p>
                }

                @Html.ActionLink("Details", "Details", new { id = item.ConcertId }, new { @class = "btn btn-default center-block" })
                @if (User.Identity.IsAuthenticated)
                {                    
                 @Html.ActionLink("I went to that", "Attended", new { id = item.ConcertId }, new { @class = "btn btn-default center-block" })                   
                }
            </td>
        </tr>
    }

</table>
